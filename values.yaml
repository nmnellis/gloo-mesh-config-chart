# Default values for gloo-mesh-config.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

virtualMesh:
  name: gloo-mesh
  # optional to disable if using chart for other configuration
  enabled: true
  # selecting Istio ingress gateways that will be used for multi-cluster traffic
  eastwestGatewaySelector:
    labels:
      istio: ingressgateway
    namespaces:
      - istio-system
    portName: tls
  # Certificate provisioning
  certificateManagement:
    istioCACerts:
      # Autogenerate Root CA and issue Intermedite CA Certificates to Istio clusters
      autoGenerated: true
      # Restart all service mesh services when Istio CA is rotated
      autoRestartPods: true
      # Optional: Provide your own root CA Certificate
      customCASecretName: gloo-mesh-istio-ca
  global:
    # Enable default deny to all mesh services
    defaultDenyAccessPolicy: false
    # Enable tcp keep alive for all multi cluster destinations
    tcpKeepAlive:
      enabled: false
      time: 4m
      interval: 1m

clusters:
  # - name: cluster1
  #   #  istio:
  #   #    namespace: istio-system
  #   #    revision: 10-0-2
  # - name: cluster2

virtualDestinations:
# - name: frontend
#   hostname: frontend.global
#   inboundPort: 8080
#   protocol: http
#   # failover:
#   # - from:
#   #     region: us-east-1
#   #   to:
#   #     - region: us-west-1
#   # - from:
#   #     region: us-west-1
#   #   to:
#   #     - region: us-east-1
#   # outlierDetection:
#   #   consecutiveErrors: 5
#   #   interval: 10s
#   #   baseEjectionTime: 1m
#   #   maxEjectionPercent: 50
#   backingServices:
#     portName: http2
#     selector:
#     - match:
#         namespaces:
#         - apps
#         labels:
#           service: wine
#     - exact:
#         name: frontend
#         namespace: frontend
#         cluster: cluster1

gateways:
  # - name: some
  #   # must match the ingress gateway kubernetes service port name
  #   portName: http2
  #   # select which istio ingress gateways this applies to
  #   selectors:
  #     - match:
  #         labels:
  #           istio: ingressgateway-frontend
  #         namespaces:
  #         - istio-system
  #   hosts:
  #     - domains:
  #       - "nick.local"
  #       match:
  #       - matches:
  #         - uri:
  #             prefix: /frontend
  #         destinations:
  #           # - kubeService:
  #           #     clusterName: cluster1
  #           #     name: frontend
  #           #     namespace: frontend
  #           #     port: 80
  #           - virtualDestination:      # proxy requests to the frontend VirtualDestination
  #               name: frontend
  #               namespace: gloo-mesh

accessPolicies:
  # - name: ingress-to-frontend
  #   sourceServiceAccounts:
  #     - name: istio-ingressgateway-service-account
  #       namespace: istio-system
  #       clusterName: cluster1
  #     - name: istio-ingressgateway-service-account
  #       namespace: istio-system
  #       clusterName: cluster2
  #   destinationServices:
  #     - match:
  #         namespaces:
  #         - apps
  #         labels:
  #           service: wine
  #     - exact:
  #         name: frontend
  #         namespace: frontend
  #         cluster: cluster1

trafficPolicies:
# - name: 
#   # sourceServices:
#   # - match:
#   #     namespaces:
#   #     - apps
#   #     labels:
#   #       service: wine
#   destinationServices:
#   - match:
#       namespaces:
#       - apps
#       labels:
#         service: wine
#   trafficShiftTo:
#     - virtualDestination:
#         name: backend
#         namespace: gloo-mesh
